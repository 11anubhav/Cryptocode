import numpy as np

DIM_X = 5

CHI_MAPPING = {
        '00000':'00000',
        '00001':'00101',
        '00010':'01010',
        '00011':'01011',
        '00100':'10100',
        '00101':'10001',
        '00110':'10110',
        '00111':'10111',
        '01000':'01001',
        '01001':'01100',
        '01010':'00011',
        '01011':'00010',
        '01100':'01101',
        '01101':'01000',
        '01110':'01111',
        '01111':'01110',
        '10000':'10010',
        '10001':'10101',
        '10010':'11000',
        '10011':'11011',
        '10100':'00110',
        '10101':'00001',
        '10110':'00100',
        '10111':'00111',
        '11000':'11010',
        '11001':'11101',
        '11010':'10000',
        '11011':'10011',
        '11100':'11110',
        '11101':'11001',
        '11110':'11100',
        '11111':'11111',
        }

def encrypt(array):
    res = []
    for x in range(DIM_X):
        val = array[x] ^ ((array[(x+1)%DIM_X]^1) & array[(x+2)%DIM_X])
        res.append(val)
    return np.array(res)

s = 0
for ind in range(32):
    a = [int(i) for i in "{0:05b}".format(ind)]
    astr = [str(i) for i in a]
    b = ''.join([str(n) for n in encrypt(np.array(a))])
    print(str("'" +str(b) + "'" + ":" +  "'"+''.join(astr))+ "'")
    s += int(b, 2)
print(s==int(31*32/2))


